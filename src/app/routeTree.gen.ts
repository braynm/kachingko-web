/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnathenticatedRouteImport } from './routes/_unathenticated'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UnathenticatedSignupRouteImport } from './routes/_unathenticated/signup'
import { Route as UnathenticatedLoginRouteImport } from './routes/_unathenticated/login'
import { Route as AuthenticatedLogoutRouteImport } from './routes/_authenticated/logout'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedTxnsIndexRouteImport } from './routes/_authenticated/txns/index'
import { Route as AuthenticatedSpendingHighlightsIndexRouteImport } from './routes/_authenticated/spending-highlights/index'
import { Route as AuthenticatedTxnsUploadRouteImport } from './routes/_authenticated/txns/upload'

const UnathenticatedRoute = UnathenticatedRouteImport.update({
  id: '/_unathenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UnathenticatedSignupRoute = UnathenticatedSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => UnathenticatedRoute,
} as any)
const UnathenticatedLoginRoute = UnathenticatedLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnathenticatedRoute,
} as any)
const AuthenticatedLogoutRoute = AuthenticatedLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedTxnsIndexRoute = AuthenticatedTxnsIndexRouteImport.update({
  id: '/txns/',
  path: '/txns/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSpendingHighlightsIndexRoute =
  AuthenticatedSpendingHighlightsIndexRouteImport.update({
    id: '/spending-highlights/',
    path: '/spending-highlights/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedTxnsUploadRoute = AuthenticatedTxnsUploadRouteImport.update({
  id: '/txns/upload',
  path: '/txns/upload',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/logout': typeof AuthenticatedLogoutRoute
  '/login': typeof UnathenticatedLoginRoute
  '/signup': typeof UnathenticatedSignupRoute
  '/txns/upload': typeof AuthenticatedTxnsUploadRoute
  '/spending-highlights': typeof AuthenticatedSpendingHighlightsIndexRoute
  '/txns': typeof AuthenticatedTxnsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/logout': typeof AuthenticatedLogoutRoute
  '/login': typeof UnathenticatedLoginRoute
  '/signup': typeof UnathenticatedSignupRoute
  '/txns/upload': typeof AuthenticatedTxnsUploadRoute
  '/spending-highlights': typeof AuthenticatedSpendingHighlightsIndexRoute
  '/txns': typeof AuthenticatedTxnsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unathenticated': typeof UnathenticatedRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/logout': typeof AuthenticatedLogoutRoute
  '/_unathenticated/login': typeof UnathenticatedLoginRoute
  '/_unathenticated/signup': typeof UnathenticatedSignupRoute
  '/_authenticated/txns/upload': typeof AuthenticatedTxnsUploadRoute
  '/_authenticated/spending-highlights/': typeof AuthenticatedSpendingHighlightsIndexRoute
  '/_authenticated/txns/': typeof AuthenticatedTxnsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/logout'
    | '/login'
    | '/signup'
    | '/txns/upload'
    | '/spending-highlights'
    | '/txns'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/logout'
    | '/login'
    | '/signup'
    | '/txns/upload'
    | '/spending-highlights'
    | '/txns'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unathenticated'
    | '/_authenticated/dashboard'
    | '/_authenticated/logout'
    | '/_unathenticated/login'
    | '/_unathenticated/signup'
    | '/_authenticated/txns/upload'
    | '/_authenticated/spending-highlights/'
    | '/_authenticated/txns/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnathenticatedRoute: typeof UnathenticatedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unathenticated': {
      id: '/_unathenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnathenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unathenticated/signup': {
      id: '/_unathenticated/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnathenticatedSignupRouteImport
      parentRoute: typeof UnathenticatedRoute
    }
    '/_unathenticated/login': {
      id: '/_unathenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnathenticatedLoginRouteImport
      parentRoute: typeof UnathenticatedRoute
    }
    '/_authenticated/logout': {
      id: '/_authenticated/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthenticatedLogoutRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/txns/': {
      id: '/_authenticated/txns/'
      path: '/txns'
      fullPath: '/txns'
      preLoaderRoute: typeof AuthenticatedTxnsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/spending-highlights/': {
      id: '/_authenticated/spending-highlights/'
      path: '/spending-highlights'
      fullPath: '/spending-highlights'
      preLoaderRoute: typeof AuthenticatedSpendingHighlightsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/txns/upload': {
      id: '/_authenticated/txns/upload'
      path: '/txns/upload'
      fullPath: '/txns/upload'
      preLoaderRoute: typeof AuthenticatedTxnsUploadRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedLogoutRoute: typeof AuthenticatedLogoutRoute
  AuthenticatedTxnsUploadRoute: typeof AuthenticatedTxnsUploadRoute
  AuthenticatedSpendingHighlightsIndexRoute: typeof AuthenticatedSpendingHighlightsIndexRoute
  AuthenticatedTxnsIndexRoute: typeof AuthenticatedTxnsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedLogoutRoute: AuthenticatedLogoutRoute,
  AuthenticatedTxnsUploadRoute: AuthenticatedTxnsUploadRoute,
  AuthenticatedSpendingHighlightsIndexRoute:
    AuthenticatedSpendingHighlightsIndexRoute,
  AuthenticatedTxnsIndexRoute: AuthenticatedTxnsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface UnathenticatedRouteChildren {
  UnathenticatedLoginRoute: typeof UnathenticatedLoginRoute
  UnathenticatedSignupRoute: typeof UnathenticatedSignupRoute
}

const UnathenticatedRouteChildren: UnathenticatedRouteChildren = {
  UnathenticatedLoginRoute: UnathenticatedLoginRoute,
  UnathenticatedSignupRoute: UnathenticatedSignupRoute,
}

const UnathenticatedRouteWithChildren = UnathenticatedRoute._addFileChildren(
  UnathenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnathenticatedRoute: UnathenticatedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
